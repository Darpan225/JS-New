ðŸŒ± Learner Must-Know (core basics youâ€™ll use all the time)

These are essential â€” learn them first:

length â†’ get string length.

charAt() â†’ get character at index (though .at() is better in modern code).

indexOf() / lastIndexOf() â†’ find substrings.

includes() â†’ check if substring exists.

slice() â†’ extract part of string.

substring() / substr() â†’ similar to slice (know them, but slice() is preferred).

split() â†’ break string into array.

toUpperCase() / toLowerCase() â†’ change case.

trim() / trimStart() / trimEnd() â†’ remove spaces.

replace() / replaceAll() â†’ modify parts of string.

concat() â†’ join strings (though + or template literals are preferred).

startsWith() / endsWith() â†’ check prefixes/suffixes.

ðŸš€ Professional Must-Know (used heavily in real-world projects)

After the basics, these become very handy:

match() / matchAll() â†’ regex matching.

search() â†’ regex search.

padStart() / padEnd() â†’ string formatting (useful in UI, IDs, etc.).

repeat() â†’ repeat a string multiple times.

localeCompare() â†’ compare strings properly (e.g., in sorting with international characters).

normalize() â†’ Unicode normalization (important in multilingual apps).

toLocaleLowerCase() / toLocaleUpperCase() â†’ locale-aware casing.

ðŸ“Œ Good-to-Know (rare but can be useful)

charCodeAt() / codePointAt() â†’ when working with Unicode / emoji characters.

valueOf() / toString() / constructor â†’ low-level methods (usually called automatically).

isWellFormed() / toWellFormed() â†’ newer Unicode-safe string handling (rare but modern).